"""role checking for users

Revision ID: 065f3d8e132e
Revises: e742fcdce8a1
Create Date: 2025-03-13 08:49:10.257172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '065f3d8e132e'
down_revision: Union[str, None] = 'e742fcdce8a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
userrole_enum = sa.Enum("admin", "vendor", "user", name="userrole")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    userrole_enum.create(op.get_bind(), checkfirst=True)
    op.add_column('product', sa.Column('vendor_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'product', 'user', ['vendor_id'], ['user_id'])
    op.drop_column('product', 'category')
    op.add_column('user', sa.Column('role', sa.Enum('admin', 'vendor', 'user', name='userrole'), nullable=True))
    op.drop_column('user', 'is_admin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('user', 'role')
    op.add_column('product', sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_column('product', 'vendor_id')
    # ### end Alembic commands ###
