"""initial

Revision ID: a8283c83f453
Revises:
Create Date: 2025-03-08 13:13:47.069763

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects.postgresql import ENUM


# revision identifiers, used by Alembic.
revision: str = "a8283c83f453"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
order_status_enum = ENUM(
    "pending",
    "processing",
    "shipped",
    "delivered",
    name="orderstatus",
    create_type=False,
)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("category", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("stock", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("product_id"),
    )
    op.create_table(
        "user",
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "cart",
        sa.Column("cart_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("cart_id"),
    )
    op.create_index(op.f("ix_cart_user_id"), "cart", ["user_id"], unique=False)
    op.create_table(
        "order",
        sa.Column("status", order_status_enum, nullable=False),
        sa.Column("total", sa.Float(), nullable=False),
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("order_id"),
    )
    op.create_index(op.f("ix_order_user_id"), "order", ["user_id"], unique=False)
    op.create_table(
        "review",
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("comment", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("review_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.product_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("review_id"),
    )
    op.create_index(
        op.f("ix_review_product_id"), "review", ["product_id"], unique=False
    )
    op.create_index(op.f("ix_review_user_id"), "review", ["user_id"], unique=False)
    op.create_table(
        "cartitem",
        sa.Column("cart_item_id", sa.Uuid(), nullable=False),
        sa.Column("cart_id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cart_id"],
            ["cart.cart_id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.product_id"],
        ),
        sa.PrimaryKeyConstraint("cart_item_id"),
    )
    op.create_index(op.f("ix_cartitem_cart_id"), "cartitem", ["cart_id"], unique=False)
    op.create_index(
        op.f("ix_cartitem_product_id"), "cartitem", ["product_id"], unique=False
    )
    op.create_table(
        "orderitem",
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("order_item_id", sa.Uuid(), nullable=False),
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["order.order_id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.product_id"],
        ),
        sa.PrimaryKeyConstraint("order_item_id"),
    )
    op.create_index(
        op.f("ix_orderitem_order_id"), "orderitem", ["order_id"], unique=False
    )
    op.create_index(
        op.f("ix_orderitem_product_id"), "orderitem", ["product_id"], unique=False
    )
    op.create_table(
        "payment",
        sa.Column(
            "status",
            sa.Enum("pending", "completed", "failed", name="paymentstatus"),
            nullable=False,
        ),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("payment_id", sa.Uuid(), nullable=False),
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["order.order_id"],
        ),
        sa.PrimaryKeyConstraint("payment_id"),
    )
    op.create_index(op.f("ix_payment_order_id"), "payment", ["order_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_payment_order_id"), table_name="payment")
    op.drop_table("payment")
    op.drop_index(op.f("ix_orderitem_product_id"), table_name="orderitem")
    op.drop_index(op.f("ix_orderitem_order_id"), table_name="orderitem")
    op.drop_table("orderitem")
    op.drop_index(op.f("ix_cartitem_product_id"), table_name="cartitem")
    op.drop_index(op.f("ix_cartitem_cart_id"), table_name="cartitem")
    op.drop_table("cartitem")
    op.drop_index(op.f("ix_review_user_id"), table_name="review")
    op.drop_index(op.f("ix_review_product_id"), table_name="review")
    op.drop_table("review")
    op.drop_index(op.f("ix_order_user_id"), table_name="order")
    op.drop_table("order")
    op.drop_index(op.f("ix_cart_user_id"), table_name="cart")
    op.drop_table("cart")
    op.drop_table("user")
    op.drop_table("product")
    # ### end Alembic commands ###
